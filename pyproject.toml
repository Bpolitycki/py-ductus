[build-system] # https://python-poetry.org/docs/pyproject/#poetry-and-pep-517
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.poetry] # https://python-poetry.org/docs/pyproject/
authors = ["Bastian Politycki <bastian.politycki@unisg.ch>"]
description = "A python package to process data trough multiple steps in a declarative pipeline; inspired by XProc."
name = "py-ductus"
readme = "README.md"
repository = "https://github.com/Bpolitycki/py-ductus"
version = "0.0.1"

[tool.poetry.dependencies] # https://python-poetry.org/docs/dependency-specification/
python = ">=3.11,<4.0"

[tool.poetry.group.test.dependencies] # https://python-poetry.org/docs/master/managing-dependencies/
black = ">=23.3.0"
coverage = {extras = ["toml"], version = ">=7.2.5"}
mypy = ">=1.2.0"
poethepoet = ">=0.20.0"
pre-commit = ">=3.3.1"
pytest = ">=7.3.1"
pytest-clarity = ">=1.0.1"
pytest-mock = ">=3.10.0"
pytest-xdist = ">=3.2.1"
ruff = ">=0.0.270"

[tool.poetry.group.dev.dependencies] # https://python-poetry.org/docs/master/managing-dependencies/
cruft = ">=2.14.0"

[tool.black] # https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
include = '\.pyi?$'
line-length = 100
target-version = ["py311"]

[tool.coverage.report] # https://coverage.readthedocs.io/en/latest/config.html#report
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run] # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

[tool.coverage.xml] # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.mypy] # https://mypy.readthedocs.io/en/latest/config_file.html
ignore_missing_imports = true
junit_xml = "reports/mypy.xml"
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[tool.pytest.ini_options] # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --verbosity=2 --junitxml=reports/pytest.xml"
testpaths = ["src", "tests"]
xfail_strict = true

[tool.ruff] # https://github.com/charliermarsh/ruff
fix = true
ignore = ["E501", "PGH001", "PGH002", "PGH003", "RET504", "S101"]
ignore-init-module-imports = true
line-length = 100
select = [
  "A",
  "ASYNC",
  "B",
  "C4",
  "C90",
  "D",
  "DTZ",
  "E",
  "F",
  "FLY",
  "I",
  "ISC",
  "N",
  "NPY",
  "PGH",
  "PIE",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "PT",
  "RET",
  "RUF",
  "RSE",
  "SIM",
  "TID",
  "UP",
  "W",
  "YTT",
]
src = ["src", "tests"]
target-version = "py311"
unfixable = ["F401", "F841"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.pydocstyle]
convention = "google"

[tool.poe.tasks] # https://github.com/nat-n/poethepoet

[tool.poe.tasks.fmt]
help = "Format this package's code"

[[tool.poe.tasks.fmt.sequence]]
cmd = "black ."

[tool.poe.tasks.lint]
help = "Lint this package"

[[tool.poe.tasks.lint.sequence]]
cmd = """
      pre-commit run
        --all-files
        --color always
      """

[tool.poe.tasks.test]
help = "Test this package"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage run"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage report"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage xml"
